---
- name: Setup routers
  hosts: routers
  become: true
  tasks:
    - name: Persistent forwarding enable
      lineinfile:
        line: "net.ipv4.ip_forward = 1"
        path: /etc/sysctl.conf
      notify: restart network

    - name: Setup repository
      replace:
        path: /etc/ssh/sshd_config
        regexp: '^.*PasswordAuthentication.*$'
        replace: 'PasswordAuthentication yes'
      when: (ansible_hostname == "inetRouter")
      notify: restart sshd

    - name: SW CONFIG | Install nmap
      yum:
        name:
          - nmap
        state: present
      when: (ansible_hostname == "centralRouter")

    - name: SW CONFIG | Install iptables
      yum:
        name:
          - iptables
          - iptables-services
        state: present

    - name: start and enable iptables service
      service:
        name: iptables
        state: restarted
        enabled: true

    - name: copy iptables config to centralRouter
      template:
        src: iptables-centralRouter
        dest: /etc/sysconfig/iptables
        owner: root
        group: root
        mode: 0600
      when: (ansible_hostname == "centralRouter")
      notify: restart iptables

    - name: copy iptables config to inetRouter
      template:
        src: iptables-inetRouter
        dest: /etc/sysconfig/iptables
        owner: root
        group: root
        mode: 0600
      when: (ansible_hostname == "inetRouter")
      notify: restart iptables

    - name: copy iptables config to inetRouter2
      template:
        src: iptables-inetRouter2
        dest: /etc/sysconfig/iptables
        owner: root
        group: root
        mode: 0600
      when: (ansible_hostname == "inetRouter2")
      notify: restart iptables

    - name: copy knocking script to centralRouter
      template:
        src: knock.sh
        dest: /home/vagrant/knock.sh
        owner: vagrant
        group: vagrant
        mode: 0755
      when: (ansible_hostname == "centralRouter")

    - name: inetRouter static routes set
      lineinfile:
        line: '{{ item }}'
        path: /etc/sysconfig/network-scripts/route-eth1
        create: yes
      loop:
        - "192.168.0.0/24 via 192.168.255.3"
      when: (ansible_hostname == "inetRouter")
      notify: restart network

    - name: centralRouter static routes set
      lineinfile:
        line: '{{ item.line }}'
        path: '{{ item.file }}'
        create: yes
      with_items: 
        - { line: "DEFROUTE=no", file: "/etc/sysconfig/network-scripts/ifcfg-eth0" }
        - { line: "GATEWAY=192.168.255.1", file: "/etc/sysconfig/network-scripts/ifcfg-eth1"}
      when: (ansible_hostname == "centralRouter")
      notify: restart network

    - name: inetRouter2 static routes set
      lineinfile:
        line: '{{ item }}'
        path: /etc/sysconfig/network-scripts/route-eth1
        create: yes
      loop:
        - "192.168.0.0/24 via 192.168.255.3"
      when: (ansible_hostname == "inetRouter2")
      notify: restart network

  handlers:
    - name: restart network
      command: /sbin/service network restart
    - name: restart iptables
      command: /sbin/service iptables restart
    - name: restart sshd
      command: /sbin/service sshd restart

- name: Setup servers
  hosts: servers
  become: true
  tasks:
    - name: centralServer static routes set
      lineinfile:
        line: '{{ item.line }}'
        path: '{{ item.file }}'
        create: yes
      with_items: 
        - { line: "DEFROUTE=no", file: "/etc/sysconfig/network-scripts/ifcfg-eth0" }
        - { line: "GATEWAY=192.168.0.1", file: "/etc/sysconfig/network-scripts/ifcfg-eth1"}
      when: (ansible_hostname == "centralServer")
      notify: restart network

    - name: NGINX | Install EPEL Repo package from standart repo
      yum:
        name: epel-release
        state: present
      tags:
        - epel-package
        - packages

    - name: NGINX | Install NGINX package from EPEL Repo
      yum:
        name: nginx
        state: latest
      notify:
        - restart nginx
      tags:
        - nginx-package
        - packages

  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted
        enabled: yes

    - name: restart network
      command: /sbin/service network restart

# - name: Setup all
#   hosts: all
#   become: true
#   tasks:
#     - name: Reboot all machines
#       reboot:
